{
  "name": "markdown-fiction-writer",
  "displayName": "Markdown Fiction Writer",
  "description": "Tools for writing fiction",
  "icon": "resources/fiction-writer-icon.png",
  "publisher": "vsc-zoctarine",
  "homepage": "https://zoctarine.github.io/vscode-fiction-writer/",
  "version": "0.0.20",
  "engines": {
    "vscode": "^1.52.0"
  },
  "categories": [
    "Programming Languages",
    "Formatters",
    "Other"
  ],
  "keywords": [
    "markdown",
    "writing",
    "fiction",
    "dialogue",
    "pandoc"
  ],
  "bugs": {
    "url": "https://github.com/zoctarine/vscode-fiction-writer/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/zoctarine/vscode-fiction-writer/"
  },
  "license": "MIT",
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configurationDefaults": {
      "[markdown]": {
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false
      }
    },
    "views": {
      "word-frequency-explorer": [
        {
          "id": "wordFrequencies",
          "name": "Word Frequencies",
          "icon": "$(eye)",
          "contextualTitle": "Word n-Gram Frequencies"
        },
        {
          "id": "statistics",
          "name": "Statistics",
          "icon": "$(eye)",
          "contextualTitle": "Document statistics"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "wordFrequencies",
        "contents": "Press refresh button to compute word-gram frequencies for current file.\n[Refresh](command:fiction-writer.extension.wordFrequency.refresh)"
      },
      {
        "view": "statistics",
        "contents": "Press refresh button to compute statistics for current file.\n[Refresh](command:fiction-writer.extension.statistics.refresh)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "fiction-writer.extension.wordFrequency.next.down",
          "when": "view == wordFrequencies",
          "group": "navigation"
        },
        {
          "command": "fiction-writer.extension.wordFrequency.next.up",
          "when": "view == wordFrequencies",
          "group": "navigation"
        },
        {
          "command": "fiction-writer.extension.wordFrequency.refresh",
          "when": "view == wordFrequencies",
          "group": "navigation"
        },
        {
          "command": "fiction-writer.extension.wordFrequency.clear",
          "when": "view == wordFrequencies",
          "group": "navigation"
        },
        {
          "command": "fiction-writer.extension.statistics.refresh",
          "when": "view == statistics",
          "group": "navigation"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "word-frequency-explorer",
          "title": "Document Statistics",
          "icon": "$(book)"
        }
      ]
    },
    "configuration": {
      "type": "array",
      "name": "markdown-fiction-writer",
      "title": "Markdown Fiction Writer",
      "properties": {
        "markdown-fiction-writer.edit.disableKeybindings": {
          "type": "boolean",
          "scope": "application",
          "default": false,
          "markdownDescription": "Disable editor keybindings added by this extension (`enter`, `shift+enter`, `delete`, `backspace`, `tab`).\n\n**Note:** If `disabled`, some of the settings will not work."
        },
        "markdown-fiction-writer.edit.easyParagraphCreation": {
          "type": "string",
          "default": "Shift+Enter",
          "scope": "application",
          "markdownDescription": "A new paragraph (two line breaks) will be created when pressing:",
          "enum": [
            "Enter",
            "Shift+Enter"
          ],
          "markdownEnumDescriptions": [
            "- `enter` will add two line-breaks.\n\n- `shift`+`enter` will add one line-break.",
            "- `enter` will add one line-break.\n\n- `shift`+`enter` will add two line-breaks."
          ]
        },
        "markdown-fiction-writer.editDialogue.marker": {
          "type": "string",
          "scope": "application",
          "default": "-- ",
          "markdownDescription": "Controls what punctuation is used when dialogue.",
          "enum": [
            "\"Hello,\" (quotes)",
            "— Hello, (em-dash followed by one space)",
            "-- Hello, (two dashes followed by one space)",
            "--- Hello, (three dashes followed by one space)",
            "—Hello, (em-dash, no space)",
            "--Hello, (two dashes, no space)",
            "---Hello, (three dashes, no space)"
          ],
          "markdownEnumDescriptions": [
            "Quotes:\n\n \"Hello,\" John said.",
            "Em-dash followed by one space: \n\n — Hello, John said.",
            "Two dashes followed by one space: \n\n -- Hello, John said.",
            "Three dashes followed by one space: \n\n --- Hello, John said.",
            "Em-dash, no space: \n\n —Hello, John said.",
            "Two dashes, no space: \n\n --Hello, John said.",
            "Three dashes, no space: \n\n ---Hello, John said."
          ]
        },
        "markdown-fiction-writer.editDialogue.markerAutoReplace": {
          "type": "boolean",
          "scope": "application",
          "default": true,
          "markdownDescription": "If anything other than `quotes` is selected, it automatically replaces the `-- ` text at the begining of a new line, with the selected marker."
        },
        "markdown-fiction-writer.editDialogue.sentenceIndent": {
          "type": "number",
          "scope": "application",
          "default": 3,
          "minimum": 0,
          "maximum": 100,
          "markdownDescription": "Indent for sequential lines of the same dialogue paragraph. (`0` for no indenting)"
        },
        "markdown-fiction-writer.editDialogue.sentenceIndentAutoDetect": {
          "type": "boolean",
          "scope": "application",
          "default": true,
          "markdownDescription": "Sets the line indent from the same dialogue paragraph equal with the selected `#markdown-fiction-writer.editDialogue.marker#`."
        },
        "markdown-fiction-writer.view.wordWrapIndent": {
          "type": "number",
          "scope": "application",
          "default": 0,
          "minimum": -1,
          "maximum": 100,
          "markdownDescription": "The hanging indent of wrapped lines.\n\n**Select:**\n- `0` for same indent as first line,\n- `-1` for now wrapping indent,\n- any other value for hanging indent.\n\n\n\n_**Warning:** Only works if `#editor.wordWrap#` is enabled, and might change the `#editor.tabSize#` setting for `markdown`._"
        },
        "markdown-fiction-writer.view.foldParagraphLines": {
          "type": "boolean",
          "scope": "application",
          "default": true,
          "description": "Show folding marker for paragraphs with multiple lines. (soft-breaks)"
        },
        "markdown-fiction-writer.export.outputFormat.default": {
          "type": "string",
          "scope": "application",
          "default": "odt",
          "enum": [
            "docx",
            "odt",
            "html",
            "asciidoc",
            "adoc",
            "epub",
            "fb2",
            "docbook"
          ],
          "markdownDescription": "The output document format.\n\n**Important:** This requires having [Pandoc](https://pandoc.org/installing.html) installed on your system, and available to be run from commandline."
        },
        "markdown-fiction-writer.export.outputFormat.alwaysShowFormatPicker": {
          "type": "boolean",
          "scope": "application",
          "default": false,
          "markdownDescription": "Select the output format each time an export command is run.\n\nIf set to `false`, the selected `#markdown-fiction-writer.export.outputFormat.default#` will be used."
        },
        "markdown-fiction-writer.export.showSaveDialogue": {
          "type": "string",
          "scope": "application",
          "default": "Always",
          "enum": [
            "Always",
            "Never"
          ],
          "markdownEnumDescriptions": [
            "The Save File Dialogue is shown every time an export command is run.",
            "Never show the Save File Dialogue. The exported document will be saved in the same directory with the source document(s)."
          ],
          "markdownDescription": "Control when the Save File Dialogue is shown."
        },
        "markdown-fiction-writer.export.outputTemplate.enabled": {
          "type": "boolean",
          "scope": "application",
          "default": false,
          "markdownDescription": "If enabled, the template file selected at `#markdown-fiction-writer.export.outputTemplate.file#` will be used when exporting to `docx` or `odt` formats."
        },
        "markdown-fiction-writer.export.outputTemplate.file": {
          "type": "string",
          "scope": "application",
          "default": "",
          "markdownDescription": "The output template to be used when exporting to `docx` or `odt`.\n\n**Note:** the template file extension must match the output type. It can be an absolut path, or relative to exported document."
        },
        "markdown-fiction-writer.export.tocFilename": {
          "type": "string",
          "scope": "application",
          "default": "toc.md",
          "markdownDescription": "The filename compiled by **Compile TOC command.**."
        },
        "markdown-fiction-writer.export.smartDeshes": {
          "type": "boolean",
          "scope": "application",
          "default": true,
          "markdownDescription": "Converts `--` to `em-dash` (—) character in exported output. If not selected, it will default to `en-dash` (–).\n\nIs PanDoc `+old_dashes` markdown extension."
        },
        "markdown-fiction-writer.export.skipCodeComments": {
          "type": "boolean",
          "scope": "application",
          "default": true,
          "markdownDescription": "When parsing `.md` files, skips lines starting with `//`. "
        },
        "markdown-fiction-writer.textFormatting.enabled": {
          "type": "boolean",
          "scope": "application",
          "default": true,
          "markdownDescription": "This is feature is **EXPERIMENTAL**. Make sure make a backup before trying it out.\n\nIf enabled, it formats document using the selected formatters. Formatting is available with `Format Document` command"
        },
        "markdown-fiction-writer.textFormatting.fixMismatchDialogueMarkers": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "If `#markdown-fiction-writer.editDialogue.marker#` is not quotes, replaces mismatched markers with current selected marker."
        },
        "markdown-fiction-writer.textFormatting.fixDialogueIndents": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "If `#markdown-fiction-writer.editDialogue.marker#` is not quotes, and `#markdown-fiction-writer.editDialogue.sentenceIndent#` is enabled, reformats dialogue indents to selected dialogue indent."
        },
        "markdown-fiction-writer.textFormatting.fixParagraphSpacing": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "Normalizes space between different paragraph types (header, body, dialogue, ...)."
        },
        "markdown-fiction-writer.textFormatting.removeExtraSpaces": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "Replaces multiple consecutive spaces to one single space. (not from begining or ending of line)"
        },
        "markdown-fiction-writer.textFormatting.removeExtraLines": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "Reduces multiple empty lines (more than two), to a single empty line."
        },
        "markdown-fiction-writer.textFormatting.removeTrailingSpaces": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "Remove all whitespace characters from line ends."
        },
        "markdown-fiction-writer.textFormatting.fixParagraphBreaks": {
          "scope": "application",
          "type": "string",
          "default": "none",
          "enum": [
            "none",
            "Soft line-breaks As New Paragraph",
            "Soft line-breaks In Same Paragraph",
            "One Sentence Per Line"
          ],
          "markdownDescription": "Controls how paragraph breaks and soft line breaks will be formatted.",
          "markdownEnumDescriptions": [
            "No change to linebreaks",
            "Transforms each soft line-break to a new paragraph.",
            "Merges soft line-break lines into same paragraph line.",
            "Splits lines into sentences. Each sentence is on a separate line."
          ]
        },
        "markdown-fiction-writer.view.enhancedZenMode.enabled": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "If enabled, the default keyboard shortcuts for Zen Mode will be overloaded with enhanced version."
        },
        "markdown-fiction-writer.view.enhancedZenMode.theme": {
          "scope": "application",
          "type": "string",
          "default": "",
          "markdownDescription": "The theme to be used in Enhanced Zen Mode. _(leave empty for no theme switch)_"
        },
        "markdown-fiction-writer.view.enhancedZenMode.fontSize": {
          "scope": "application",
          "type": "number",
          "default": 16,
          "minimum": 5,
          "maximum": 100,
          "markdownDescription": "The font size to be used in Enhanced Zen Mode."
        },
        "markdown-fiction-writer.view.statusBar.enabled": {
          "scope": "application",
          "type": "boolean",
          "default": true,
          "markdownDescription": "If enabled, the custom Fiction Writer status bar will be visible"
        },
        "markdown-fiction-writer.view.fileTags.enabled": {
          "type": "boolean",
          "scope": "application",
          "default": false,
          "markdownDescription": "If enabled, reads tags from `.md` files and display corresponding badge in file explorer. Recognizes tags defined under `#markdown-fiction-writer.view.fileTags.definitions#`"
        },
        "markdown-fiction-writer.view.fileTags.definitions": {
          "type": "object",
          "scope": "application",
          "markdownDescription": "Custom file tags. Add the tag (`item`) on the first line of a .md file, like this: `// draft`, and you will see the `value` as a badge in file explorer.\n\n**Note:** the badges should be only 1 or 2 characters long (the others will be ignored), and tag names are case sensitive",
          "additionalProperties": {
            "type": "string"
          }
        },
        "markdown-fiction-writer.view.highlight.textBetweenQuotes": {
          "type": "boolean",
          "scope": "application",
          "default": false,
          "markdownDescription": "Highlights all text between quotes. Usefull for highlighting dialogues (if quoted syntax is used)"
        },
        "markdown-fiction-writer.view.highlight.dialogueMarkers": {
          "type": "boolean",
          "scope": "application",
          "default": true,
          "markdownDescription": "Highlights the dialogue markers (---, --, — or quote marks symbols)."
        }
      }
    },
    "commands": [
      {
        "command": "fiction-writer.extension.setEnhancedZenModeTheme",
        "title": "Set Current theme as Enhanced Zen Mode theme",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.exitEnhancedZenMode",
        "title": "Exit Enhanced Zen Mode",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.toggleEnhancedZenMode",
        "title": "Toggle Enhanced Zen Mode",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.compile",
        "title": "Compile...",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.compileFile",
        "title": "Compile current document",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.compileAll",
        "title": "Compile all documents",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.compileToc",
        "title": "Compile TOC file",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.selectEditMode",
        "title": "Select Edit Mode",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.toggleNewParagraph",
        "title": "Toggle New Paragraph on Enter",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.toggleKeybindings",
        "title": "Toggle custom keybindings enabled/disabled",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.toggleTypewriterMode",
        "title": "Toggle Typewriter Mode",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fiction-writer.extension.wordFrequency.refresh",
        "title": "Refresh Word Frequencies",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fiction-writer.extension.statistics.refresh",
        "title": "Refresh Document Statistics",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fiction-writer.extension.wordFrequency.clear",
        "title": "Clear",
        "icon": "$(clear-all)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fiction-writer.extension.wordFrequency.next.up",
        "title": "Select Previous",
        "icon": "$(find-previous-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fiction-writer.extension.wordFrequency.next.down",
        "title": "Select Next",
        "icon": "$(find-next-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      }
    ],
    "keybindings": [
      {
        "command": "fiction-writer.extension.onNewLine",
        "key": "enter",
        "mac": "enter",
        "when": "!config.markdown-fiction-writer.edit.disableKeybindings && textInputFocus && !editorReadonly && editorLangId == markdown && !suggestWidgetVisible"
      },
      {
        "command": "fiction-writer.extension.onNewLineAltered",
        "key": "shift+enter",
        "mac": "shift+enter",
        "when": "!config.markdown-fiction-writer.edit.disableKeybindings && textInputFocus && !editorReadonly && editorLangId == markdown && !suggestWidgetVisible"
      },
      {
        "command": "fiction-writer.extension.onBackspace",
        "key": "backspace",
        "mac": "backspace",
        "when": "!config.markdown-fiction-writer.edit.disableKeybindings && textInputFocus && !editorReadonly && editorLangId == markdown && !suggestWidgetVisible"
      },
      {
        "command": "fiction-writer.extension.onDelete",
        "key": "delete",
        "mac": "delete",
        "when": "!config.markdown-fiction-writer.edit.disableKeybindings && textInputFocus && !editorReadonly && editorLangId == markdown && !suggestWidgetVisible"
      },
      {
        "command": "fiction-writer.extension.onTab",
        "key": "tab",
        "mac": "tab",
        "when": "!config.markdown-fiction-writer.edit.disableKeybindings && textInputFocus && !editorReadonly && editorLangId == markdown && !suggestWidgetVisible"
      },
      {
        "command": "fiction-writer.extension.compileFile",
        "key": "f9",
        "mac": "f9",
        "when": "textInputFocus && editorLangId == markdown"
      },
      {
        "command": "fiction-writer.extension.compileAll",
        "key": "shift+f9",
        "mac": "shift+f9",
        "when": "textInputFocus && editorLangId == markdown"
      },
      {
        "command": "fiction-writer.extension.compileToc",
        "key": "ctrl+shift+f9",
        "mac": "cmf+shift+f9",
        "when": "textInputFocus && editorLangId == markdown"
      },
      {
        "command": "fiction-writer.extension.toggleEnhancedZenMode",
        "key": "ctrl+k z",
        "mac": "cmd+k z",
        "when": "config.markdown-fiction-writer.view.enhancedZenMode.enabled && textInputFocus && editorLangId == markdown"
      },
      {
        "command": "fiction-writer.extension.exitEnhancedZenMode",
        "key": "escape escape",
        "mac": "escape escape",
        "when": "config.markdown-fiction-writer.view.enhancedZenMode.enabled && textInputFocus && editorLangId == markdown && inZenMode"
      }
    ],
    "grammars": [
      {
        "scopeName": "markdown.fiction",
        "path": "./grammars/fiction.markdown.tmGrammar.json",
        "injectTo": [
          "text.html.markdown"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "deploy": "vsce publish --yarn",
    "postversion": "git push --tags && git push",
    "release": "npm version patch"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^4.9.0",
    "@typescript-eslint/parser": "^4.9.0",
    "eslint": "^7.15.0",
    "glob": "^7.1.6",
    "mocha": "^8.1.3",
    "typescript": "^4.1.2",
    "vsce": "^1.85.0",
    "vscode-test": "^1.4.1"
  }
}